{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n    pandoc_args: [\n        \"+RTS\", \"-K64m\",\n        \"-RTS\"\n        ]\n---\n\n\n## Loading and preprocessing the data\n```{r echo = TRUE}\n#Zip file is always present into project directory\ndataZipFile <- \"activity.zip\"\ndataFile <- \"activity.csv\"\n\n#Check if exists unzipped, else unzip it\nif(!file.exists(dataFile)) unzip(dataFile)\n\n#Read file\nbasedata <- read.csv(dataFile)\n\n#Remove NAs\ndata <- basedata[!is.na(basedata$steps),]\n```\n\n\n## What is mean total number of steps taken per day?\n```{r echo = TRUE}\nlibrary(dplyr)\n\n#Calculate Total Steps per day\ndataStepsSum <- with(data, aggregate(steps, list(date), sum))\ndataStepsSum <- rename(dataStepsSum, date = Group.1, steps = x)\ndataStepsSum <- select(dataStepsSum, steps, date)\n\n#Calculate mean and median rounded to 2 decimals\nmeanSteps <- round(mean(dataStepsSum$steps),2)\nmedianSteps <- round(median(dataStepsSum$steps),2)\nmedianSteps\n\n#Generate graph\nhist(dataStepsSum$steps, breaks = nrow(dataStepsSum))\nabline(v = meanSteps, col = \"red\")\nabline(v = medianSteps, col = \"blue\")\n```\n\n.      | values\n------ | ----------------\nmean   | `r as.character(meanSteps)`\nmedian | `r as.character(medianSteps)`\n\n\n## What is the average daily activity pattern?\n\n```{r echo = TRUE}\nlibrary(ggplot2)\n\ndataIntervalAverage <- with(data, aggregate(steps, list(interval), mean))\ndataIntervalAverage <- rename(dataIntervalAverage, interval = Group.1, steps = x)\nwith(dataIntervalAverage, qplot(x = interval, y = steps, geom = \"line\"))\nmaxIntervalAverage <- dataIntervalAverage[dataIntervalAverage$steps == max(dataIntervalAverage$steps),]\n```\n\nThe maximum average interval of 5-minutes is the interval `r maxIntervalAverage[1]` with an average of `r round(maxIntervalAverage[2],2)` steps.\n\n\n## Imputing missing values\n\n```{r echo = TRUE}\n#Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)\nnaRows <- nrow(basedata[is.na(basedata),])\nnaRows\n\n#Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n```\n\nI'm going to use the mean for that 5-minute interval with na value for steps\n\n```{r echo = TRUE}\n#Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\ndataToTreat <- basedata\n\ndataToTreat %>% \ninner_join(dataIntervalAverage, by = \"interval\") %>%\nmutate(steps = ifelse(is.na(steps.x), steps.y, steps.x)) %>%\nselect(steps, date, interval) -> dataTreated\n\n#Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\n#Calculate Total Steps per day\ndataStepsSum <- with(dataTreated, aggregate(steps, list(date), sum))\ndataStepsSum <- rename(dataStepsSum, date = Group.1, steps = x)\ndataStepsSum <- select(dataStepsSum, steps, date)\n\n#Calculate mean and median rounded to 2 decimals\nmeanStepsTreated <- round(mean(dataStepsSum$steps),2)\nmedianStepsTreated <- round(median(dataStepsSum$steps),2)\nmedianStepsTreated\n\n#Generate graph\nhist(dataStepsSum$steps, breaks = nrow(dataStepsSum))\nabline(v = meanStepsTreated, col = \"red\")\nabline(v = medianStepsTreated, col = \"blue\")\n```\n\nvalues | data with NA    | data without NA\n------ | --------------- | ---------------\nmean   | `r as.character(meanSteps)`   | `r as.character(meanStepsTreated)`\nmedian | `r as.character(medianSteps)` | `r as.character(medianStepsTreated)`\n\n## Are there differences in activity patterns between weekdays and weekends?\n\n```{r echo = FALSE}\nlibrary(lubridate)\n\ngetTypeOfDay <- function(x) {ifelse(x %in% c(7,1),\"Weekends\", \"Weekdays\")}\n\ndata %>% \n         mutate(wdays = wday(ymd(date))) %>% \n         mutate(typeOfDay = as.factor(getTypeOfDay(wdays))) %>%\n         select(steps, date, interval, typeOfDay) -> dataDays\n\ng <- ggplot(dataDays, aes(interval, steps)) \ng <- g + geom_line(col=\"blue\") + facet_wrap(~typeOfDay)\ng <- g + ggtitle(\"Comparative of activity patterns between weekdays and weekends\")\ng\n\n```\n\n",
    "created" : 1433869906053.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1973833283",
    "id" : "DEE23CB6",
    "lastKnownWriteTime" : 1433960349,
    "path" : "D:/Privado/repos/5.ReproducibleResearch/PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}